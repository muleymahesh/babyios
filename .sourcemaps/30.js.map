{"version":3,"sources":["../../src/pages/account/saved-address/add-address/add-address.module.ts","../../src/pages/account/saved-address/add-address/add-address.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACD;AACc;AAW7D,IAAa,oBAAoB;IAAjC;IAAmC,CAAC;IAAD,2BAAC;AAAD,CAAC;AAAvB,oBAAoB;IAThC,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAc;SACf;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,oEAAc,CAAC;YACxC,wEAAY;SACb;KACF,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACdS;AACgB;AAC4G;AAClG;AACb;AAOvD,IAAa,cAAc;IASzB,wBAAoB,OAAyB,EAAS,QAAwB,EAAU,MAAuB,EAAU,KAAoB,EAAU,SAA2B,EAAU,IAAkB,EAAU,KAAoB,EAAU,SAAoB,EAAU,OAAwB,EAAU,EAAe,EAAU,GAAwB;QAEvW,kHAAkH;QAClH,yBAAyB;QACzB,yCAAyC;QACzC,sCAAsC;QACtC,MAAM;QANc,YAAO,GAAP,OAAO,CAAkB;QAAS,aAAQ,GAAR,QAAQ,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAe;QAAU,cAAS,GAAT,SAAS,CAAkB;QAAU,SAAI,GAAJ,IAAI,CAAc;QAAU,UAAK,GAAL,KAAK,CAAe;QAAU,cAAS,GAAT,SAAS,CAAW;QAAU,YAAO,GAAP,OAAO,CAAiB;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,QAAG,GAAH,GAAG,CAAqB;QALvW,cAAS,GAAU,EAAE,CAAC;QACtB,WAAM,GAAU,EAAE,CAAC;QAYnB,uBAAuB;QACvB,uCAAuC;QACvC,oCAAoC;QACpC,MAAM;QACN,MAAM;QAEN,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;QACnC,sBAAsB;QAErB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACtB,UAAU,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,EAAE,kEAAU,CAAC,QAAQ,CAAE;YACvG,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAC7E,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC5E,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,kEAAU,CAAC,QAAQ,CAAE;YAC9C,QAAQ,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,kEAAU,CAAC,QAAQ,CAAE;YACpD,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAE;YAC5C,wDAAwD;YACxD,SAAS,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,kEAAU,CAAC,QAAQ,CAAE;YACtD,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,kEAAU,CAAC,QAAQ,CAAE;SACnD,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;IACjB,oCAAoC;IACpC,oDAAoD;IACpD,WAAW;IACX,6BAA6B;IAC7B,6CAA6C;IAC7C,kBAAkB;IAClB,qCAAqC;IACrC,sCAAsC;IACtC,kEAAkE;IAClE,iBAAiB;IACjB,oCAAoC;IACpC,gEAAgE;IAChE,YAAY;IACZ,UAAU;IACV,+BAA+B;IAC/B,iBAAiB;IACjB,+BAA+B;IAC/B,0BAA0B;IAC1B,SAAS;IACT,MAAM;IAEN,8BAA8B;IAC9B,wBAAwB;IACxB,IAAI;IAEJ,eAAe;IACf,2DAA2D;IAC3D,sEAAsE;IACtE,wBAAwB;IACxB,iDAAiD;IACjD,eAAe;IACf,qCAAqC;IACrC,wBAAwB;IACxB,QAAQ;IACR,IAAI;IAEJ,+BAAM,GAAN;QAAA,iBAgCC;QA/BC,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC;YAC9B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;QAEjC,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YACnB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAE9C,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,kBAAkB;YACrD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAE,WAAC;gBAClD,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACL,CAAC;QAED,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,iBAAiB;YAClF,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,SAAS,CAAE,WAAC;gBACpD,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACL,CAAC;QAED,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,EAAC;YACxB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzC,CAAC;QAED,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,EAAC;YACxB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,CAAC;QAED,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,gCAAO,GAAP;QACA,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAEF,qBAAC;AAAD,CAAC;AAlHY,cAAc;IAJ1B,wEAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;OACG;KAChC,CAAC;mBAUuW;AAyGxW;SAlHY,cAAc,gB","file":"30.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AddAddressPage } from './add-address';\nimport { SharedModule } from '../../../../app/shared.module';\n\n@NgModule({\n  declarations: [\n    AddAddressPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AddAddressPage),\n    SharedModule\n  ],\n})\nexport class AddAddressPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account/saved-address/add-address/add-address.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavParams, ViewController } from 'ionic-angular';\nimport { WooCommerceProvider, SettingsProvider, LoadingProvider, ToastProvider, UserProvider, OrderProvider, AddressProvider } from '../../../../providers/providers';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\n\n@IonicPage()\n@Component({\n  selector: 'page-add-address',\n  templateUrl: 'add-address.html',\n})\nexport class AddAddressPage {\n  private form : FormGroup;\n\n  data: any;\n  countries: any[] = [];\n  states: any[] = [];\n  countryOpts: any;\n  stateOpts: any;\n\n  constructor(private setting: SettingsProvider, public viewCtrl: ViewController, private loader: LoadingProvider, private toast: ToastProvider, private translate: TranslateService, private user: UserProvider, private order: OrderProvider, private navParams: NavParams, private address: AddressProvider, private fb: FormBuilder, private woo: WooCommerceProvider) {\n\n  // this.translate.get(['SELECT', 'COUNTRY', 'SELECT_YOUR_COUNTRY', 'STATE', 'SELECT_YOUR_STATE']).subscribe( x=> {\n  //   this.countryOpts = {\n  //     title: x.SELECT + ' ' + x.COUNTRY,\n  //     subTitle: x.SELECT_YOUR_COUNTRY\n  //   }\n\n  //   this.stateOpts = {\n  //     title: x.SELECT + ' ' + x.STATE,\n  //     subTitle: x.SELECT_YOUR_STATE\n  //   }\n  // });\n\n  this.data = navParams.data.params;\n // this.loadCountry();\n\n  this.form = this.fb.group({\n      first_name: [this.data.first_name || (this.user.all ? this.user.user.fname : ''), Validators.required ],\n      last_name: this.data.last_name || (this.user.all ? this.user.user.lname : ''),\n      email: [this.user.all ? this.user.user.user_email : '', Validators.required],\n      phone: [this.data.phone, Validators.required ],\n      landmark: [this.data.landmark, Validators.required ],\n      area: [this.data.area, Validators.required ],\n      // postcode: [this.data.postcode, Validators.required ],\n      address_1: [this.data.address_1, Validators.required ],\n      pincode: [this.data.pincode, Validators.required ]\n    });\n  }\n\n  // loadCountry(){\n  //   if(this.setting.all.countries){\n  //     this.countries = this.setting.getCountries();\n  //   }else{\n  //     this.loader.present();\n  //     this.woo.saveCountries().then( val=> {\n  //       if(val) {\n  //         if(val.value.length == 0){\n  //           for(let i in val.options)\n  //             this.countries.push({id: i, name: val.options[i]});\n  //         }else{\n  //           for(let i in val.value)\n  //             this.countries.push({id: i, name: val.value[i]});\n  //         }\n  //       }\n  //       this.loader.dismiss();\n  //     }, err=> {\n  //       this.loader.dismiss();\n  //       console.log(err);\n  //     })\n  //   }\n\n  //   if(this.data.action == 2)\n  //     this.getStates();\n  // }\n\n  // getStates(){\n  //   let id = this.data.country || this.form.value.country;\n  //   this.woo.getStates(id).map(res => res.json()).subscribe( res => {\n  //     for(let i in res)\n  //       this.states.push({id: i, name: res[i]});\n  //   }, err=> {\n  //     console.error(\"Error : \"+err);\n  //     this.states = [];\n  //   });\n  // }\n\n  submit(){\n    if(this.address.all.length == 0)\n      this.form.value.primary = true;\n    \n    if(this.data.primary)\n      this.form.value.primary = this.data.primary;\n\n    if(this.data.action == 1) {\n      this.address.add(this.form.value); // FOR NEW ADDRESS\n      this.translate.get('NEW_ADDRESS_ADDED').subscribe( x=> {\n        this.toast.show(x);\n      });\n    }\n\n    if(this.data.action == 2) {\n      this.address.update(this.navParams.data.index, this.form.value); // UPDATE ADDRESS\n      this.translate.get('ADDRESS_WAS_UPDATED').subscribe( x=> {\n        this.toast.show(x);\n      });\n    }\n\n    if(this.data.action == 3){ // FOR CHECKOUT BILLING\n      this.address.add(this.form.value);\n      this.order.setBilling(this.form.value);\n    }\n\n    if(this.data.action == 4){ // FOR CHECKOUT SHIPPING\n      this.address.add(this.form.value);\n      this.order.setShipping(this.form.value);\n    }\n\n    this.dismiss();\n  }\n\n  dismiss() {\n\t\tthis.viewCtrl.dismiss();\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account/saved-address/add-address/add-address.ts"],"sourceRoot":""}